apiVersion: hobbyfarm.io/v1
kind: Environment
metadata:
  name: aws-env
  namespace: hobbyfarm
spec:
  count_capacity:
    rocky-9.4: 303
    ubuntu-24.04: 101
  display_name: aws-env
  environment_specifics:
    cred_secret: aws-creds
    executor_image: rancher/terraform-controller-executor:v0.0.13-alpha1
    module: tf-module-aws
    region: us-east-1
    subnet: subnet-0ca6bea3c0d18b6f3
    vpc_security_group_id: sg-0c87eb1835fdbb24f
  provider: aws
  template_mapping:
    rocky-9.4:
      disk: "80"
      image: ami-09d1c0fa810f404d6 # ami-09eb79aa215c2a900
      instance_type: m6a.2xlarge
      ssh_username: rocky
    ubuntu-24.04:
      disk: "80"
      image: ami-06f59e43b31a49ecc # ami-04b70fa74e45c3917
      instance_type: m6a.2xlarge
      ssh_username: ubuntu
  ws_endpoint: hobby-shell.rfed.io
---
#apiVersion: hobbyfarm.io/v1
#kind: Environment
#metadata:
#  name: do-env
#  namespace: hobbyfarm
#  annotations:
#    hobbyfarm.io/provisioner: digitalocean
#spec:
#  environment_specifics:
#    region: nyc1 # any valid digitalocean region slug
#    token-secret: do-token # a secret with key of 'token' and value
#  count_capacity:
#    rocky-9.3: 41
#    ubuntu-24.04: 41
#  display_name: do-env
#  provider: digitalocean
#  template_mapping:
#    rocky-9.3:
#      image: rockylinux-9-x64
#      size: s-4vcpu-8gb-amd
#      ssh_username: root
#    ubuntu-24.04:
#      image: ubuntu-22-04-x64
#      size: s-4vcpu-8gb-amd
#      ssh_username: root
#  ws_endpoint: hobby-shell.rfed.io
---
apiVersion: terraformcontroller.cattle.io/v1
kind: Module
metadata:
  name: tf-module-aws
  namespace: hobbyfarm
spec:
  git:
    branch: master
    intervalSeconds: 150
    url: https://github.com/hobbyfarm/tf-module-aws 
---
apiVersion: hobbyfarm.io/v1
kind: VirtualMachineTemplate
metadata:
  name: rocky-9.4
  namespace: hobbyfarm
spec:
  config_map:
    cloud-config: |
      #cloud-config
      packages:
      - nfs-utils
      - cryptsetup
      - iscsi-initiator-utils
      runcmd:
        - mkdir -p /etc/rancher/rke2/ /var/lib/rancher/rke2/server/manifests/
        - systemctl enable --now iscsid.service
        - curl -L -o /etc/sysctl.conf https://raw.githubusercontent.com/clemenko/hobbyfarm/main/kernel_tuning.txt
        - sysctl -p
        - echo "export PATH=/root/.local/bin:/root/bin:/usr/local/sbin:/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin/" > /root/.bashrc
  image: rocky-9.4
  name: rocky-9.4
---
apiVersion: hobbyfarm.io/v1
kind: VirtualMachineTemplate
metadata:
  name: ubuntu-24.04
  namespace: hobbyfarm
spec:
  config_map:
    cloud-config: |
      #cloud-config
      packages:
      - nfs-common
      runcmd:
        - mkdir -p /etc/rancher/rke2/
        - apt remove ufw -y
        - curl -L -o /etc/sysctl.conf https://raw.githubusercontent.com/clemenko/hobbyfarm/main/kernel_tuning.txt
        - sysctl -p
  image: ubuntu-24.04
  name: ubuntu-24.04
---
apiVersion: hobbyfarm.io/v1
dataType: boolean
displayName: Registration Disabled
kind: Setting
metadata:
  name: registration-disabled
  namespace: hobbyfarm
value: "true"
valueType: scalar

---
#apiVersion: hobbyfarm.io/v1
#kind: ScheduledEvent
#metadata:
#  name: workshop2
#  namespace: hobbyfarm
#spec:
#  access_code: workshop2
#  creator: admin
#  description: workshop2
#  start_time: Fri Jul 07 14:04:51 UTC 2023
#  end_time: Fri Jul 08 14:04:52 UTC 2023
#  event_name: workshop2
#  on_demand: true
#  printable: false
#  required_vms:
#    aws-env:
#      rocky-9.3: 20
#  restricted_bind: true
#  restricted_bind_value: workshop2
#  scenarios:
#  - workshop
#status:
#  active: true


## USER / RBAC

---
apiVersion: hobbyfarm.io/v2
kind: User
metadata:
    name: admin
    namespace: hobbyfarm
spec:
    email: admin
    password: '$2a$10$QkpisIWlrq/uA/BWcOX0/uYWinHcbbtbPMomY6tp3Gals0LbuFEDO'
    access_codes:
    - workshop
    settings:
      ctr_enabled: "true"
      ctxAccessCode: example-access-code
      terminal_fontSize: "14"
      terminal_theme: GitHub
      theme: light
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
    name: hobbyfarm-admin
    namespace: hobbyfarm
    labels:
      rbac.hobbyfarm.io/managed: "true" # must be present in order to configure this role in admin ui
rules:
  - apiGroups: ["hobbyfarm.io"]
    resources: ["*"]
    verbs: ["*"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["roles", "rolebindings"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: hobbyfarm-admin-rolebinding
  namespace: hobbyfarm
subjects:
  - kind: User
    name: admin
    apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: hobbyfarm-admin
  apiGroup: rbac.authorization.k8s.io
  
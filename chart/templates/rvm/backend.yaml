{{ if .Values.ranchervm.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: ranchervm-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: backend
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: backend
          image: {{ $.Values.ranchervm.image.vm }}
          imagePullPolicy: Always
          args:
            - -backend
      serviceAccountName: ranchervm-service-account
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: ranchervm-system
spec:
  ports:
    - name: api
      port: 9500
  selector:
    app: backend
  type: ClusterIP
---
{{ if $.Values.ingress.enabled }}
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: backend
  namespace: ranchervm-system
  annotations:
  {{- range $key, $value := .Values.ingress.annotations }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
spec:
  {{- if $.Values.ingress.className }}
  ingressClassName: {{ $.Values.ingress.className }}
  {{- end }}
  rules:
    - host: {{ $.Values.ingress.hostnames.ranchervm.backend }}
      http:
        paths:
          - backend:
              serviceName: backend
              servicePort: api
  {{- if $.Values.ingress.tls.enabled }}
  tls:
    - hosts:
        - {{ $.Values.ingress.hostnames.ranchervm.backend | quote }}
  {{- end }}
{{ end }}
{{ end }}

{{ if $.Values.ranchervm.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: ranchervm-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: frontend
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: frontend
        image: {{ $.Values.ranchervm.image.frontend }}
        imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: ranchervm-system
spec:
  ports:
  - name: ui
    port: 80
    targetPort: 8000
  selector:
    app: frontend
  #type: LoadBalancer
---
{{ if $.Values.ingress.enabled }}
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: frontend
  namespace: ranchervm-system
  annotations:
  {{- range $key, $value := .Values.ingress.annotations }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
spec:
  {{- if $.Values.ingress.className }}
  ingressClassName: {{ $.Values.ingress.className }}
  {{- end }}
  rules:
    - host: {{ $.Values.ingress.hostnames.ranchervm.frontend }}
      http:
        paths:
          - backend:
              serviceName: frontend
              servicePort: 80
  {{- if $.Values.ingress.tls.enabled }}
  tls:
    - hosts:
      - {{ $.Values.ingress.hostnames.ranchervm.frontend | quote }}
  {{- end }}
{{ end }}
{{ end }}

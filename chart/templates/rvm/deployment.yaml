{{ if .Values.ranchervm.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vm-controller
  namespace: ranchervm-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vm-controller
  template:
    metadata:
      labels:
        app: vm-controller
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: vm-controller
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: vm-controller
          image: {{ $.Values.ranchervm.image.vm }}
          imagePullPolicy: Always
          args:
            - -vm
            - -bridge-iface={{ .Values.ranchervm.nic }}
            - -v=3
            - -image-novnc={{ $.Values.ranchervm.image.novnc }}
            - -image-tools={{ $.Values.ranchervm.image.tools }}
            - -image-vm={{ $.Values.ranchervm.image.vm }}
      serviceAccountName: ranchervm-service-account
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ip-controller
  namespace: ranchervm-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ip-controller
  template:
    metadata:
      labels:
        app: ip-controller
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: ip-controller
              topologyKey: "kubernetes.io/hostname"
      hostNetwork: true
      containers:
        - name: ip-controller
          image: {{ $.Values.ranchervm.image.vm }}
          imagePullPolicy: Always
          command: [ "sh", "-c"]
          args:
            - exec /ranchervm -ip -devicename {{ .Values.ranchervm.bridge }} -v 3
        - name: arp-scanner
          image: rancher/vm:v0.2.0
          imagePullPolicy: Always
          command: [ "bash", "-c"]
          # This is probably too aggressive for anything bigger than class 3 network
          args:
            - while true; do
                iface={{ .Values.ranchervm.bridge }};
                inet_addr=$(ifconfig $iface | grep "inet " | awk '{print $2}' | cut -d':' -f2);
                inet_mask=$(ifconfig $iface | grep "inet " | awk '{print $4}' | cut -d':' -f2);
                ips="$(arp-scan -interface=$iface $inet_addr:$inet_mask | awk -F'\t' '$2 ~ /[0-9a-f][0-9a-f]:/ {print $1}')";
                for ip in $ips; do
                  ping -c 1 -t 1 $ip &>/dev/null &
                done;
                sleep 5;
              done
      serviceAccountName: ranchervm-service-account
{{ end }}
